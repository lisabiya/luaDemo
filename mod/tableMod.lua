---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by wakfu.
--- DateTime: 2020/5/9 14:05
---
tableMod = {}

function tableMod.join()
    local raa = { "a", "v", "as" }
    local ms = table.concat(raa, ',')
    print(ms)
end

function tableMod.iterate()
    local user = {
        name = "tom",
        age = 18,
        ["a"] = "wn",
    }
    print(user)
    for i, v in ipairs(user) do
        print(i, v)
    end
    print("*********")
    for k, v in pairs(user) do
        print(k, v)
    end
end

function tableMod.promise()
    -- 打印协程1和协程2的状态
    function status()
        --print("协程一状态 :" .. coroutine.status(co1) .. " ,协程二状态: " .. coroutine.status(co2))
    end

    -- 协程1
    co1 = coroutine.create(function(a)
        print("协程一参数 :" .. a)
        status()

        -- 唤醒协程2
        local stat, rere = coroutine.resume(co2, "2")
        print("111 协程二 resume's return is " .. tostring(stat) .. "**" .. rere)
        status()

        -- 再次唤醒协程2
        local stat2, rere2 = coroutine.resume(co2, "4")
        print("222 协程二 resume's return is " .. rere2)
        local arg = coroutine.yield("6")
    end)

    -- 协程2
    co2 = coroutine.create(function(a)
        print("协程二参数 :" .. a)
        status()
        local rey = coroutine.yield("3")
        print("协程二 yeild's return is " .. rey)
        status()
        coroutine.yield("5")
    end)

    --主线程执行协程co1,传入字符串“main thread arg”
    print("开始")
    stat, mainre = coroutine.resume(co1, "主线程参数")
    status()
    print("last return is " .. mainre)
end

function tableMod.subTable(tabs, start, ends)
    length = #tabs
    newTabs = {}
    for i, v in ipairs(tabs) do
        if i >= start and i < ends then
            table.insert(newTabs, v)
        end
    end
    return newTabs
end

function tableMod.promise1()
    co1 = coroutine.create(function(a)
        print("co1 arg is :" .. a)
    end)
    co2 = coroutine.wrap(function(a)
        print("co2 arg is :" .. a)
    end)
    coroutine.resume(co1, "BBB")
    co2("AAA")
end

return tableMod
